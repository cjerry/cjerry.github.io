set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" Git plugin
Plugin 'tpope/vim-fugitive'

" vim-sensible
Plugin 'tpope/vim-sensible'

" vim airline
Plugin 'bling/vim-airline'

" Vim airline themes
Plugin 'vim-airline/vim-airline-themes'

" YCM
Plugin 'Valloric/YouCompleteMe'

" YCM Config generator
Plugin 'rdnetto/YCM-Generator'

" wakatime
Plugin 'wakatime/vim-wakatime'

" LaTeX Suite
Plugin 'vim-latex/vim-latex'

" Track the engine.
Plugin 'SirVer/ultisnips'

" Skim tabbing
Plugin 'keflavich/macvim-skim'

" Snippets are separated from the engine. Add this if you want them:
Plugin 'honza/vim-snippets'

" Solarized
Plugin 'altercation/vim-colors-solarized'

" Easy Comment
Plugin 'scrooloose/nerdcommenter'

" Syntax Checking
Plugin 'scrooloose/syntastic'

" File syntax tags
Plugin 'majutsushi/tagbar'

" T A B O Y S
Plugin 'godlygeek/tabular'

" Easy Align
Plugin 'junegunn/vim-easy-align'

" Jedi
" Plugin 'davidhalter/jedi-vim'

" Vim-surround
Plugin 'tpope/vim-surround'

" Easymotion
Plugin 'easymotion/vim-easymotion'

" Indentation guides
Plugin 'nathanaelkane/vim-indent-guides'

"Markdown preview
Plugin 'suan/vim-instant-markdown'

" Ctrl-p
Plugin 'kien/ctrlp.vim'

" Dependency for Easytags
Plugin 'xolox/vim-misc'

" Easytags
Plugin 'xolox/vim-easytags'

" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<c-l>"
let g:UltiSnipsJumpForwardTrigger="<c-k>"
let g:UltiSnipsJumpBackwardTrigger="<c-h>"
" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
"

syntax enable " Turn syntax processing back on.

" Airline settings.
let g:airline_powerline_fonts = 1
let g:airline_theme='solarized'

" LaTeX-Suite settings.
" Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'
let g:Tex_ViewRule_pdf='Skim'
let g:Tex_DefaultTargetFormat='pdf'
let g:macvim_skim_app_path='/Applications/Skim.app'
let g:Tex_GotoError=0 " See no evil

" Powerline configuration.
set guifont=Inconsolata-dz\ for\ Powerline:h12
let g:Powerline_symbols = 'fancy'
set encoding=utf-8
set t_Co=256
set fillchars+=stl:\ ,stlnc:\
set term=xterm-256color
set termencoding=utf-8

" Load the solarized-dark color scheme.
set background=dark
colorscheme solarized

" Editing
set lazyredraw    " Redraw better
set tabstop=4     " Number of visual spaces
set shiftwidth=4  " Width of >> and << .
set softtabstop=4 " Number of editing spaces
set expandtab     " Tabs become spaces
set autoindent    " Automatically indent
set cursorline    " Highlight current line
set number        " Line numbers shown
set relativenumber " #value #wordtoolong #2hard2align
set wildmenu      " Menu value
set scrolloff=5   " Scroll buffer

" Search
set ignorecase    " Case insensitive matching
set smartcase     " Case sensitive with explicit uppercase.

" Movement
" I blame LaTeX for these.
nnoremap j gj
nnoremap k gk
nnoremap 0 g0
nnoremap $ g$
" Screen centering remap.
nnoremap <space> zz
nnoremap n nzz
nnoremap N Nzz

" Mouse controls for Vim.
set mouse=a
set ttymouse=xterm2

" Sometimes copy pasterino. Link to sys clipboard.
set clipboard=unnamed

" I can spealing.
set spell

" Auto line wrap.
set textwidth=80
set linebreak

" Highlight trailing whitespace.
match ErrorMsg '\s\+$'

" Delete trailing whitespace.
nnoremap <Leader>rtw :%s/\s\+$//e<CR>

" Plugin specific stuff.
nmap <F8> :TagbarToggle<CR>

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

" YCM
let g:ycm_show_diagnostics_ui = 0
"let g:jedi#completions_enabled = 0
let g:ycm_python_binary_path = '/usr/local/bin/python3'
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_collect_identifiers_from_tags_files = 1

" Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_mode_map = { 'mode': 'passive' }
let g:syntastic_python_python_exec = '/usr/local/bin/python3'
"let g:syntastic_python_checkers = ['python', 'pylint', 'pep8', 'pyflakes']

" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" Gui
set guioptions-=r
set guioptions-=L

" Indent Guides
let g:indent_guides_guide_size=1

" CTRLP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlPBufTag'
let g:ctrlp_max_height = 15
let g:ctrlp_extensions = ['buffertag', 'tag']

" Easytags
let g:easytags_file = '~/.vim/tags'
let g:easytags_opts = ['--fields=+l']
